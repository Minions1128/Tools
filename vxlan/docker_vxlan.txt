This documentation tells the methond to config vxlan using Open vSwitch in Docker.

Here is a method that config ovs on 2 Docker host.
The topology is as follows:
    +-----------+     +-----------+
    |           |     |           |
    |  Docker1  |-----|  Docker2  |
    |           |     |           |
    +-----------+     +-----------+
IP addresses:
    Docker1-eth0：172.31.0.1/24
    Docker2-eth0：172.31.0.2/24

We use the 2 Open vSwitch in each Docker.

We will create vxbr on Docker1
    ovs-vsctl add-br vxbr
    ifconfig vxbr 10.0.1.1/16
Create interface vx1, add the interface to vxbr
    ovs-vsctl add-port vxbr vx1 -- set interface vxlan type=vx1 options:remote_ip=172.31.0.2
Run a Container
    docker run -it --rm  \
        --name host1  \
        --net=none  \
        --privileged=true \
        minions1128/ubuntu /bin/bash
Add the veth-pair of Docker into vxbr
    /usr/bin/ovs-docker add-port vxbr eth0 b062406bc6b6(CONTAINER ID)
Config the ip address of container
    ifconfig eth0 10.0.1.2/16

Do the same configure on Docker2
    ovs-vsctl add-br vxbr
    ifconfig vxbr 10.0.2.1/16
    ovs-vsctl add-port vxbr vx1 -- set interface vxlan type=vx1 options:remote_ip=172.31.0.1
    docker run -it --rm  \
        --name host2  \
        --net=none  \
        --privileged=true \
        minions1128/ubuntu /bin/bash
    /usr/bin/ovs-docker add-port vxbr eth0 b062406bc6b6(CONTAINER ID)
    ifconfig eth0 10.0.2.2/16

Then, you can ping container-host1 and container-host2 on each container-host.

*If there is other futher applications need to use, change the MTU of each interface to 1450. The default value may be 1500.
    echo "1450" > /sys/class/net/eth0/mtu

Using iperf or other testing tool to verify its connectivity.
